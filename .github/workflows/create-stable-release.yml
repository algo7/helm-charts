name: Create Stable Release

permissions:
  contents: write
  packages: write
  attestations: write
  id-token: write

on:
  push:
    tags:
      - '*-v*.*.*-v*.*.*' # chartName-appVersion-chartVersion


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release:
    name: Create Stable Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Set Context Variables
        run: |
          # 1. Get the App Name (removes first '-' and everything after)
          echo "APP_NAME=${{ github.ref_name%%-v*}}" >> $GITHUB_ENV

          # 2. Get the App Version
          # First, remove the app name prefix
          TEMP_VERSION=${{ github.ref_name#*-}}
          # Remove the chart version suffix
          echo "APP_VERSION=${TEMP_VERSION%%-*}" >> $GITHUB_ENV

          # 3. Get the Chart Version
          echo "CHART_VERSION=v${{ github.ref_name##*-v}}" >> $GITHUB_ENV

          # 4. Set the Helm Package Path
          echo "HELM_PACKAGE_PATH=${{ github.workspace }}/charts/${{ github.ref_name%%-v*}}" >> $GITHUB_ENV

      - name: Setup Helm
        uses: azure/setup-helm@v4.3.0

      - name: Package Helm Chart
        run: helm package $HELM_PACKAGE_PATH/$APP_NAME --version $CHART_VERSION --app-version $APP_VERSION --destination $HELM_PACKAGE_PATH

      # Login to GitHub Container Registry
      - name: Registry Login
        uses: docker/login-action@v3.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      - name: Publish Helm OCI Chart
        run: helm push $HELM_PATH oci://ghcr.io/${{ github.repository }}
        shell: bash
        env:
          HELM_EXPERIMENTAL_OCI: 1

      - name: Create Release ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME=${{ github.ref_name }}
          gh release create $TAG_NAME \
            $HELM_PATH \
            --generate-notes \
            --latest
